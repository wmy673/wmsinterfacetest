{"name": "test_02", "status": "broken", "statusDetails": {"message": "pymysql.err.ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'where id = \"ff8080819823849b01984053d59602b5\"\\' at line 1')", "trace": "self = <test_modify_goods.TestModifyGoods object at 0x0000022BA14E9460>\ndatabascursor = <pymysql.cursors.Cursor object at 0x0000022BA14E95B0>\n\n    def test_02(self, databascursor):\n        # 添加商品的接口\n        url = urlconfig.server_url + urlconfig.goodssavemodify_url\n    \n        headers = {\n            \"Authorization\": f\"Bearer 566h55CG5ZGY\",\n            \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n        }\n    \n        n = random.randint(10, 100)\n        bianma = \"LV031\" + str(n)\n        body = {\n            \"id\": \"ff8080819823849b01984053d59602b5\",\n            \"shpMingCheng\": \"自动化接口测试用到的数据，勿动！！\",\n        }\n    \n        # 把字典转化成json字符串\n        bodystr = json.dumps(body, ensure_ascii=False)\n    \n        # 构建请求体\n        data = {\"mdGoodsstr\": bodystr}\n    \n        # data, json, params\n        r = requests.post(url, data=data,headers=headers, timeout=5)\n    \n        assert 200 == r.status_code\n        r = r.json()\n        print(\"整个响应体的json格式内容：\", r)\n        assert True == r.get('ok')\n>       databascursor.execute('select shp_ming_cheng where id = \"ff8080819823849b01984053d59602b5\"')\n\ncase\\test_modify_goods.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\myvenv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\myvenv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\myvenv\\lib\\site-packages\\pymysql\\connections.py:563: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n..\\myvenv\\lib\\site-packages\\pymysql\\connections.py:825: in _read_query_result\n    result.read()\n..\\myvenv\\lib\\site-packages\\pymysql\\connections.py:1199: in read\n    first_packet = self.connection._read_packet()\n..\\myvenv\\lib\\site-packages\\pymysql\\connections.py:775: in _read_packet\n    packet.raise_for_error()\n..\\myvenv\\lib\\site-packages\\pymysql\\protocol.py:219: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = b'\\xff(\\x04#42000You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'where id = \"ff8080819823849b01984053d59602b5\"\\' at line 1'\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        # https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_basic_err_packet.html\n        # Error packet has optional sqlstate that is 5 bytes and starts with '#'.\n        if data[3] == 0x23:  # '#'\n            # sqlstate = data[4:9].decode()\n            # TODO: Append (sqlstate) in the error message. This will be come in next minor release.\n            errval = data[9:].decode(\"utf-8\", \"replace\")\n        else:\n            errval = data[3:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'where id = \"ff8080819823849b01984053d59602b5\"\\' at line 1')\n\n..\\myvenv\\lib\\site-packages\\pymysql\\err.py:150: ProgrammingError"}, "start": 1753431482299, "stop": 1753431482353, "uuid": "b6cbb705-14f8-4615-bd39-2b044cd55e4e", "historyId": "c294e4241b827513d55aaf1826aabcc5", "testCaseId": "c294e4241b827513d55aaf1826aabcc5", "fullName": "case.test_modify_goods.TestModifyGoods#test_02", "labels": [{"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "test_modify_goods"}, {"name": "subSuite", "value": "TestModifyGoods"}, {"name": "host", "value": "DESKTOP-T0E6A8N"}, {"name": "thread", "value": "36192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_modify_goods"}], "titlePath": ["case", "test_modify_goods.py", "TestModifyGoods"]}