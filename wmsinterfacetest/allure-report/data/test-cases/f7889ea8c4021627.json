{"uid":"f7889ea8c4021627","name":"test_01","fullName":"case.test_goodslist.TestGoodsList#test_01","historyId":"5c1b963c65ff0b8d494143c6f2787a79","time":{"start":1753410541688,"stop":1753410541741,"duration":53},"status":"failed","statusMessage":"AssertionError: assert True == False\n +  where True = <built-in method get of dict object at 0x000001C9BCE029C0>('ok')\n +    where <built-in method get of dict object at 0x000001C9BCE029C0> = {'errorCode': None, 'errorMsg': None, 'obj': [{'bzhiQi': '360', 'categoryCode': '', 'categoryId': None, 'cfWenCeng': '...nCeng': '冷藏', ...}, {'bzhiQi': '', 'categoryCode': None, 'categoryId': None, 'cfWenCeng': '冷藏', ...}, ...], 'ok': True}.get","statusTrace":"self = <test_goodslist.TestGoodsList object at 0x000001C9BCD9FFA0>\n\n    def test_01(self):\n        url = urlconfig.server_url + urlconfig.goodslist_url\n        body = {\n           \"username\": \"\",\n            \"searchstr\": \"RL001\"\n        }\n        # data, json, params\n        r = requests.get(url, json=body, timeout=5)\n    \n        assert 200 == r.status_code\n        r = r.json()\n        print(\"整个响应体的json格式内容：\", json.dumps(r, indent=4, ensure_ascii=False))\n    \n>       assert r.get('ok') == False\nE       AssertionError: assert True == False\nE        +  where True = <built-in method get of dict object at 0x000001C9BCE029C0>('ok')\nE        +    where <built-in method get of dict object at 0x000001C9BCE029C0> = {'errorCode': None, 'errorMsg': None, 'obj': [{'bzhiQi': '360', 'categoryCode': '', 'categoryId': None, 'cfWenCeng': '...nCeng': '冷藏', ...}, {'bzhiQi': '', 'categoryCode': None, 'categoryId': None, 'cfWenCeng': '冷藏', ...}, ...], 'ok': True}.get\n\ncase\\test_goodslist.py:23: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"case"},{"name":"suite","value":"test_goodslist"},{"name":"subSuite","value":"TestGoodsList"},{"name":"host","value":"DESKTOP-T0E6A8N"},{"name":"thread","value":"8824-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"case.test_goodslist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f7889ea8c4021627.json","parameterValues":[]}